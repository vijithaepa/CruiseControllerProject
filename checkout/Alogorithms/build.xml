<project basedir="." default="build" name="Algorithems">

	<property name="report.dir" value="reports" />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="build.dir" value="build/classes" />
	<property name="build.instrumented.dir" value="build/instrumented-classes" />
	<property name="test.report.dir" value="${report.dir}/junit" />
	<property name="coverage.report.dir" value="${report.dir}/coverage" />


	<path id="classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="lib" includes="*.jar" />
	</path>

	<taskdef classpathref="classpath" resource="tasks.properties" />

	<target name="build" depends="unit-tests,coverage-report-html" />

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${build.instrumented.dir}" />
		<delete dir="${report.dir}" />
	</target>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.instrumented.dir}" />
		<mkdir dir="${test.report.dir}/raw/" />
		<mkdir dir="${test.report.dir}/html/" />
		<mkdir dir="${coverage.report.dir}" />
	</target>


	<target name="compile" depends="clean, init">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" fork="false" classpathref="classpath" />
		<javac srcdir="${test.dir}" destdir="${build.dir}" classpathref="classpath" />
	</target>

	<target name="unit-tests" depends="compile" description="run your test suite and generate report">
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes" errorProperty="test.error" failureProperty="test.failed" fork="true">
			<classpath refid="classpath" />
			<batchtest todir="${test.report.dir}/raw/">
				<formatter type="xml" />
				<fileset dir="${test.dir}">
					<include name="**/Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail message="***** Tests Error Check reports for details." if="test.error" />
		<fail message="***** Tests failed. Check reports for details." if="test.failed" />

		<junitreport todir="${test.report.dir}">
			<fileset dir="${test.report.dir}/raw/">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.report.dir}\html\" />
		</junitreport>
	</target>

	<target name="cover-test" description="Cobertura instrumenting and test coverage.">
		<echo message=" ##################### Coverate Test ########################" />

		<!-- code Instrument -->
		<delete dir="${build.instrumented.dir}" />
		<delete file="coberturaAlgo.ser" />
		<delete dir="${coverage.report.dir}" />
		<cobertura-instrument todir="${build.instrumented.dir}" datafile="coberturaAlgo.ser">
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
				<exclude name="**/Test*.class" />
			</fileset>
		</cobertura-instrument>

		<!-- Coverage Test -->
		<junit dir="${basedir}" errorproperty="test.error" failureproperty="test.failure" printsummary="withOutAndErr" fork="yes" forkmode="once" haltonerror="true">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="coberturaAlgo.ser" />

			<classpath location="${build.instrumented.dir}" />
			<classpath refid="classpath" />

			<batchtest todir="${coverage.report.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>

		<cobertura-report srcdir="${src.dir}" destdir="${coverage.report.dir}" datafile="coberturaAlgo.ser" />
	</target>

	<target name="coverage-report-html" depends="cover-test">
		<!-- Generate an XML file containing the coverage data using	the "srcdir" attribute. -->
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.report.dir}" format="xml" datafile="coberturaAlgo.ser"/>

		<!-- Generate an summary XML file containing the coverage data using the "srcdir" attribute. -->
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.report.dir}" format="summaryXml" datafile="coberturaAlgo.ser"/>

		<cobertura-report srcdir="${src.dir}" destdir="${coverage.report.dir}" datafile="coberturaAlgo.ser"/>
	</target>

</project>